#! /usr/bin/env sh

# This script is a wrapper that tries to allow the user to shutdown the
# machine without root rights.
# In most cases the administrator must manually change settings 
# (e.g. the sudoers file) to allow unprivileged users to shutdown the system
# The user can add the desired state as argument (`shutdown` to poweroff,
# `reboot` to reboot the system)
# Last script output is being written to ~/.pwrshutdown.log

exec 1>"${HOME}/.pwrshutdown.log" 2>&1

action="${1}"

shutdown()
{
	dbus-send --system --print-reply --dest="org.freedesktop.login1" \
			/org/freedesktop/login1 \
			org.freedesktop.login1.Manager.PowerOff \
			boolean:true || \
	shutdown -P now -h -a || \
	poweroff -p || \
	systemctl poweroff || \
	return 1
}

reboot()
{
	dbus-send --system --print-reply --dest="org.freedesktop.login1" \
			/org/freedesktop/login1 \
			org.freedesktop.login1.Manager.Reboot \
			boolean:true || \
	shutdown -r now -a || \
	reboot || \
	systemctl reboot || \
	return 1
}

case "${action}" in
	r* )
		reboot || { echo "Error: cannot reboot the system"; exit 1; } 1>&2
		;;
	s* | * )
		shutdown || { echo "Error: cannot shutdown the system"; exit 1; } 1>&2
		;;
esac


# vim: filetype=sh
