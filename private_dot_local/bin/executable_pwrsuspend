#! /usr/bin/env sh

# This script is a wrapper that tries to allow the user to suspend/hibernate
# the machine without root rights.
# In most cases the administrator must manually change settings 
# (e.g. the sudoers file) to allow unprivileged users to hibernate the system.
# Hibernation is preferred over suspending, alternatively the user can add
# the desired state as argument (`suspend` to suspend,
# `hibernate` to hibernate)
# Last script output is being written to ~/.pwrsuspend.log

exec 1>/"${HOME}/.pwrsuspend.log" 2>&1

action="${1}"

hibernate() {
	dbus-send --system --print-reply --dest="org.freedesktop.login1" \
			/org/freedesktop/login1 \
			org.freedesktop.login1.Manager.HybridSleep \
			boolean:true || \
	loginctl hybrid-sleep 2>/dev/null || \
	s2both || \
	systemctl hybrid-sleep || \
	dbus-send --system --print-reply --dest="org.freedesktop.login1" \
			/org/freedesktop/login1 \
			org.freedesktop.login1.Manager.Hibernate \
			boolean:true || \
	loginctl hibernate || \
	s2disk || \
	systemctl hibernate || \
	return 1
}

suspend() {
	dbus-send --system --print-reply --dest="org.freedesktop.login1" \
			/org/freedesktop/login1 \
			org.freedesktop.login1.Manager.Suspend \
			boolean:true || \
	loginctl suspend-then-hibernate 2>/dev/null || \
	systemctl suspend-then-hibernate || \
	loginctl suspend || \
	s2ram || \
	systemctl suspend || \
	return 1
}

case "${action}" in
	s* )
		suspend || { echo "Error: failed to suspend the system"; exit 1; } 1>&2
		;;
	h* )
		hibernate || { echo "Error: failed to hibernate the system"; exit 1; } 1>&2
		;;
	* )
		hibernate || suspend || { echo "Error: failed to set the system to sleep"; exit 1; } 1>&2
esac

# vim: filetype=sh
